# Generated by Django 5.1.5 on 2025-02-24 11:29

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Classes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_name', models.CharField(blank=True, max_length=20, null=True)),
                ('class_date', models.DateField(blank=True, null=True)),
                ('class_time', models.TimeField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('location_of_the_class', models.CharField(blank=True, max_length=50, null=True)),
                ('max_capacity', models.IntegerField(blank=True, choices=[('5', '5'), ('10', '10'), ('15', '15'), ('20', '20')], null=True)),
            ],
            options={
                'ordering': ['-class_date', '-class_time'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('subject', models.CharField(blank=True, max_length=200, null=True)),
                ('message', models.TextField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billing_duration', models.CharField(blank=True, choices=[('MONTHLY', 'Monthly'), ('3MONTHS', '3Months'), ('HALF YEARLY', 'Half Yearly'), ('YEARLY', 'Yearly')], max_length=20, null=True)),
                ('fees', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('description', models.TextField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Subscriptions',
                'ordering': ['billing_duration'],
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trainer_last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('trainer_first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('trainer_classes', models.ManyToManyField(blank=True, to='users.classes')),
            ],
            options={
                'verbose_name_plural': 'Staff',
                'ordering': ['trainer_last_name', 'trainer_first_name'],
            },
        ),
        migrations.AddField(
            model_name='classes',
            name='trainer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='users.staff'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('dob', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Date of Modified')),
                ('last_signed_in', models.DateTimeField(auto_now=True, verbose_name='Last Signed In')),
                ('discount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('payment_method', models.CharField(blank=True, choices=[('CARD', 'Credit/Debit Card'), ('CASH', 'Cash'), ('INSTALLMENTS', 'Installments'), ('paypal', 'PayPal')], max_length=20, null=True, verbose_name='Payment Method')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Subscription Payment')),
                ('date_of_payment', models.DateTimeField(auto_now=True, verbose_name='Date of Payment')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('classes_booked', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='users.classes')),
                ('subscription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='users.subscription')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
